name: Deploy Terraform
on: push
env:
  # STAGING_REGISTRY_NAME: osmseedstagingacr
  STAGING_REGISTRY_NAME: osmseedterraformacr
  STAGING_CLUSTER_NAME: osmseedStagingAks3
  # CLUSTER_RESOURCE_GROUP: osmseedStaging
  CLUSTER_RESOURCE_GROUP: osmseedterraformdev
  PRODUCTION_CLUSTER_RESOURCE_GROUP: osmseedProduction
  PRODUCTION_CLUSTER_NAME: osmseedProductionAks
  NAMESPACE: default
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      TF_VAR_username: github
      subscriptionId: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
      tenantId: ${{ secrets.TERRAFORM_TENANT_ID }}
      servicePrincipalId: ${{ secrets.TERRAFORM_SERVICE_PRINCIPAL_ID }}
      servicePrincipalKey: ${{ secrets.TERRAFORM_SERVICE_PRINCIPAL_KEY }}
      storageAccessKey: ${{ secrets.TERRAFORM_STORAGE_KEY }}
    steps:
    - uses: actions/checkout@v1

    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'

    - name: Setup git
      run: git config --global user.email "noreply@developmentseed.org" && git config --global user.name "Github Action"

    - name: Deploy -- Dev
      env:
        postgresPassword: ${{ secrets.TERRAFORM_STAGING_POSTGRES_PASSWORD }}
        auth0BaseUrl: ${{ secrets.STAGING_AUTH0_ISSUER_BASE_URL }}
      if: startsWith(github.event.head_commit.message, '[deploy]')
      run: ./scripts/cideploy --dev

    - name: Deploy -- Staging
      env:
        postgresPassword: ${{ secrets.TERRAFORM_STAGING_POSTGRES_PASSWORD }}
        auth0BaseUrl: ${{ secrets.STAGING_AUTH0_ISSUER_BASE_URL }}
      if: github.ref == 'refs/heads/develop'
      run: ./scripts/cideploy --staging

    - name: Deploy -- Production
      env:
        postgresPassword: ${{ secrets.TERRAFORM_STAGING_POSTGRES_PASSWORD }}
        auth0BaseUrl: ${{ secrets.PRODUCTION_AUTH0_ISSUER_BASE_URL }}
      if: github.ref == 'refs/heads/main'
      run: ./scripts/cideploy --production